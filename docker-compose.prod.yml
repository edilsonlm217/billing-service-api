version: "3.8"

services:
  app:
    build:
      context: .
      args:
        POSTGRES_URL: ${POSTGRES_URL}
        STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
        STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
        BASE_URL: ${BASE_URL}
        AUTH_SECRET: ${AUTH_SECRET}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    container_name: saas-app-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - POSTGRES_URL=${POSTGRES_URL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - BASE_URL=${BASE_URL}
      - AUTH_SECRET=${AUTH_SECRET}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - BAILEYS_API_URL=${BAILEYS_API_URL}
    depends_on:
      - db
    networks:
      - internal_network

  db:
    image: postgres:15
    container_name: app-database-prod
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal_network

volumes:
  pgdata:

networks:
  internal_network:
    external: true
